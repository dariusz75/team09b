{"version":3,"sources":["img/dashboard-brand.jpg","component/header/header.js","component/tabs/Tab.js","component/tabs/Tabs.js","pages/Home.js","actions/action-names.js","actions/dispatcher.js","stores/dummyData.js","stores/store.js","pages/page1.js","actions/actions.js","pages/page2.js","pages/page3.js","pages/page4.js","component/routing/routing.js","component/headlines/jumbotronStyles.js","component/headlines/Jumbotron.js","component/mainContainer/MainContainer.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Header","props","className","left","to","style","marginRight","JATOTheme","space","marginTop","isActive","Tab","this","addTab","id","title","activeTab","children","React","Component","ListTabs","glamorous","ul","paddingLeft","listStyle","margin","TabTitleItem","li","display","paddingRight","transition","padding","cursor","opacity","isActiveTab","ActiveTabBorder","div","height","backgroundColor","colors","primary","position","bottom","willChange","activeTabElement","width","offsetWidth","offsetLeft","TabAnchorItem","a","textTransform","color","fontWeight","TabsContainer","borderBottom","ReactTabs","Tabs","state","tabs","prevActiveTab","tabsElements","newTab","isNewTabFound","i","setState","prevState","concat","removeTab","tabId","filter","tab","onClick","event","map","index","key","innerRef","tabElement","Children","child","cloneElement","Home","Div","md","as","ActionNames","page1","page2","page3","Dispatcher","page2Data","page1Data","name","value","page3Data","theStore","notifications","page1Received","page2Received","page3Received","action","type","emit","testNotification","EventEmitter","dispatcher","register","handleActions","bind","Page1","useState","data","setData","useEffect","on","length","dispatch","removeAllListeners","strokeDasharray","dataKey","fill","Page2","dataComingIn","stroke","Page3","x1","y1","x2","y2","offset","stopColor","stopOpacity","fillOpacity","Routing","path","exact","component","Page4","StyledJumbotron","styled","paddingBottom","alignItems","grey","backgroundSize","backgroundPosition","breakpoints","minHeight","content","fontSize","images","background","Array","isArray","reverse","img","breakpoint","backgroundImage","url","StyledJumbotronInner","Jumbotron","sm","lg","MainContainer","App","backgroundBranding","fontSizes","darkBlue","lightBlue","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.27d8b1c7.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/dashboard-brand.097d4fcc.jpg\";","import React from \"react\";\nimport {\n  JATONavBar,\n  JATOLogo,\n  JATOTheme,\n  JATONavGroup,\n  JATONavItem,\n} from \"@jato/ui-component-library\";\nimport { Link } from \"react-router-dom\";\n\nconst Header = (props) => {\n  return (\n    <JATONavBar\n      className=\"header\"\n      left={() => (\n        <>\n          <Link to=\"/\">\n            <JATOLogo\n              style={{\n                marginRight: JATOTheme.space[6],\n                marginTop: JATOTheme.space[1],\n              }}\n            />\n          </Link>\n          <JATONavGroup>\n            <JATONavItem isActive={false}>\n              <Link to=\"/\">Home</Link>\n            </JATONavItem>\n            <JATONavItem isActive={false}>\n              <Link to=\"/page1\">Fuel Efficiency</Link>\n            </JATONavItem>\n            <JATONavItem isActive={false}>\n              <Link to=\"/page2\">FE Over Time</Link>\n            </JATONavItem>\n            <JATONavItem isActive={false}>\n              <Link to=\"/page3\">Distance Travelled</Link>\n            </JATONavItem>\n            <JATONavItem isActive={false}>\n              <Link to=\"/page4\">Supporting Documentation</Link>\n            </JATONavItem>\n          </JATONavGroup>\n        </>\n      )}\n    />\n  );\n};\n\nexport default Header;\n","import React from \"react\";\n\nclass Tab extends React.Component {\n  componentDidMount() {\n    this.props.addTab({\n      id: this.props.id,\n      title: this.props.title,\n    });\n  }\n\n  render() {\n    return this.props.activeTab.id === this.props.id && this.props.children;\n  }\n}\n\nexport default Tab;\n","import React, { Component } from \"react\";\nimport glamorous from \"glamorous\";\nimport { JATOTheme } from \"@jato/ui-component-library\";\n\nimport Tab from \"./Tab\";\n\nconst ListTabs = glamorous.ul({\n  paddingLeft: 0,\n  listStyle: \"none\",\n  margin: 0,\n});\n\nconst TabTitleItem = glamorous.li(\n  {\n    display: \"inline-block\",\n    paddingRight: 5,\n    paddingLeft: 5,\n    transition: \"all 300ms cubic-bezier(0.4, 0, 0.2, 1) 0ms\",\n    padding: \"16px 30px\",\n    cursor: \"pointer\",\n    opacity: \"0.4\",\n    \":hover\": {\n      opacity: 1,\n    },\n  },\n  (props) => {\n    return (\n      props.isActiveTab && {\n        transition: \"all 300ms cubic-bezier(0.4, 0, 0.2, 1) 0ms\",\n        cursor: \"default\",\n        opacity: 1,\n      }\n    );\n  }\n);\n\nconst ActiveTabBorder = glamorous.div(\n  {\n    height: 4,\n    backgroundColor: JATOTheme.colors.primary,\n    position: \"absolute\",\n    bottom: 0,\n    transition: \"all 300ms cubic-bezier(0.4, 0, 0.2, 1) 0ms\",\n    willChange: \"left, width\",\n  },\n  (props) => {\n    return (\n      props.activeTabElement && {\n        width: props.activeTabElement.offsetWidth,\n        left: props.activeTabElement.offsetLeft,\n      }\n    );\n  }\n);\n\nconst TabAnchorItem = glamorous.a({\n  textTransform: \"capitalize\",\n  color: \"#000000\",\n  fontWeight: 600,\n});\n\nconst TabsContainer = glamorous.div({\n  position: \"relative\",\n  borderBottom: \"1px solid #dfdfdf\",\n});\n\nconst ReactTabs = glamorous.div({\n  position: \"realative\",\n});\n\nclass Tabs extends Component {\n  static Tab = Tab;\n\n  state = {\n    tabs: [],\n    prevActiveTab: {},\n    activeTab: this.props.activeTab,\n    tabsElements: [],\n  };\n\n  addTab = (newTab) => {\n    let isNewTabFound;\n\n    for (let i in this.state.tabs) {\n      let tab = this.state.tabs[i];\n\n      if (tab.id === newTab.id) {\n        isNewTabFound = true;\n        break;\n      }\n    }\n\n    if (!isNewTabFound) {\n      this.setState((prevState, props) => {\n        return {\n          tabs: prevState.tabs.concat(newTab),\n        };\n      });\n    }\n  };\n\n  removeTab = (tabId) => {\n    this.setState((prevState, props) => {\n      return {\n        tabs: prevState.tabs.filter((tab) => tab.id !== tabId),\n      };\n    });\n  };\n\n  onClick = (tab) => (event) => {\n    this.setState((prevState, props) => {\n      return {\n        prevActiveTab: prevState.activeTab,\n        activeTab: tab,\n      };\n    });\n  };\n\n  render() {\n    return (\n      <ReactTabs>\n        <TabsContainer>\n          <ListTabs>\n            {this.state.tabs.map((tab, index) => (\n              <TabTitleItem\n                key={index}\n                onClick={this.onClick(tab)}\n                id={tab.id}\n                innerRef={(tabElement) => {\n                  if (!this.state.tabsElements[tab.id]) {\n                    this.setState((prevState, props) => {\n                      const tabsElements = prevState.tabsElements;\n                      tabsElements[tab.id] = tabElement;\n\n                      return {\n                        tabsElements,\n                      };\n                    });\n                  }\n                }}\n                isActiveTab={this.state.activeTab.id === tab.id}\n              >\n                <TabAnchorItem>{tab.title}</TabAnchorItem>\n              </TabTitleItem>\n            ))}\n          </ListTabs>\n\n          <ActiveTabBorder\n            activeTabElement={this.state.tabsElements[this.state.activeTab.id]}\n          />\n        </TabsContainer>\n\n        {React.Children.map(this.props.children, (child) =>\n          React.cloneElement(child, {\n            activeTab: this.state.activeTab,\n            addTab: this.addTab,\n          })\n        )}\n      </ReactTabs>\n    );\n  }\n}\n\nexport default Tabs;\n","import React from \"react\";\nimport { Col, Container, Row } from \"react-grid-system\";\nimport glamorous from \"glamorous\";\nimport Tabs from \"../component/tabs/Tabs\";\n\nimport {\n  JATOTheme,\n  JATOHeading,\n  JATOVerticalSpacer,\n  JATOList,\n  JATOListItem,\n} from \"@jato/ui-component-library\";\n\nconst Home = () => {\n  return (\n    <div className=\"home-page\">\n      <Tabs\n        activeTab={{\n          id: \"tab1\",\n        }}\n      >\n        <Tabs.Tab id=\"tab1\" title=\"Market\">\n          <glamorous.Div padding={20}>\n            <Container>\n              <Row>\n                <Col md={8}>\n                  <div className=\"tab1-left-section\">\n                    <JATOHeading as=\"h3\">Market outlook</JATOHeading>\n                    <JATOVerticalSpacer />\n                    <JATOList className=\"tab-1-list\">\n                      <JATOListItem>\n                        &#8226; 152 million actively connected cars on global\n                        roads by 2020\n                      </JATOListItem>\n                      <JATOListItem>\n                        &#8226; 2 billion connected cars on the world’s roadways\n                        by 2025\n                      </JATOListItem>\n                      <JATOListItem>\n                        &#8226; Average car will produce up to 30 terabytes of\n                        data each day\n                      </JATOListItem>\n                      <JATOListItem>\n                        &#8226; Car-generated data may become a USD 450 - 750\n                        billion market by 2030\n                      </JATOListItem>\n                    </JATOList>\n                    <JATOVerticalSpacer height={12} />\n                  </div>\n                </Col>\n                <Col md={4}>\n                  <div className=\"tab1-right-section\"></div>\n                </Col>\n              </Row>\n            </Container>\n          </glamorous.Div>\n        </Tabs.Tab>\n\n        <Tabs.Tab id=\"tab2\" title=\"Audience\">\n          <glamorous.Div padding={20}>\n            <Container>\n              <Row>\n                <Col md={8}>\n                  <JATOHeading as=\"h3\">Audience or customer</JATOHeading>\n                  <JATOVerticalSpacer />\n                  <div className=\"home-page-left-section\">\n                    <JATOHeading as=\"h4\">OEM </JATOHeading>\n                    <JATOList className=\"tab-2-list\">\n                      <JATOListItem>&#8226; Vehicle efficiency</JATOListItem>\n                      <JATOListItem>\n                        &#8226; Report vehicle reliability\n                      </JATOListItem>\n                      <JATOListItem>\n                        &#8226; Comparison with other makes and models\n                      </JATOListItem>\n                    </JATOList>\n                    <JATOVerticalSpacer height={12} />\n\n                    <JATOHeading as=\"h4\">Dealer</JATOHeading>\n                    <JATOList className=\"tab-2-list\">\n                      <JATOListItem>&#8226; Servicing and parts</JATOListItem>\n                      <JATOListItem>\n                        &#8226; Customer service / support\n                      </JATOListItem>\n                      <JATOListItem>\n                        &#8226; Plan for parts inventory\n                      </JATOListItem>\n                      <JATOListItem>\n                        &#8226; Plan vehicles requiring service plan for parts\n                        inventory\n                      </JATOListItem>\n                      <JATOListItem>\n                        &#8226; Gain insight on how customer utilising car\n                        (upsell opportunity)\n                      </JATOListItem>\n                    </JATOList>\n                    <JATOVerticalSpacer height={12} />\n\n                    <JATOHeading as=\"h4\">\n                      Fleet operator or leasing{\" \"}\n                    </JATOHeading>\n                    <JATOList className=\"tab-2-list\">\n                      <JATOListItem>&#8226; Mileage</JATOListItem>\n                      <JATOListItem>&#8226; Maintenance</JATOListItem>\n                      <JATOListItem>&#8226; Location of vehicles </JATOListItem>\n                      <JATOListItem>&#8226; Vehicle efficiency </JATOListItem>\n                      <JATOListItem>\n                        &#8226; Running costs based on mileage{\" \"}\n                      </JATOListItem>\n                    </JATOList>\n                    <JATOVerticalSpacer height={12} />\n\n                    <JATOHeading as=\"h4\">Finance</JATOHeading>\n                    <JATOList className=\"tab-2-list\">\n                      <JATOListItem>\n                        &#8226; Current adjusted value of vehicle based on\n                        current mileage\n                      </JATOListItem>\n                      <JATOListItem>\n                        &#8226; Vehicle service state insurance\n                      </JATOListItem>\n                    </JATOList>\n                    <JATOVerticalSpacer height={12} />\n\n                    <JATOHeading as=\"h4\">Insurance </JATOHeading>\n                    <JATOList className=\"tab-2-list\">\n                      <JATOListItem>&#8226; Mileage</JATOListItem>\n                      <JATOListItem>&#8226; Maintenance</JATOListItem>\n                      <JATOListItem>&#8226; Location of vehicles </JATOListItem>\n                      <JATOListItem>&#8226; Vehicle efficiency </JATOListItem>\n                      <JATOListItem>\n                        &#8226; Running costs based on mileage{\" \"}\n                      </JATOListItem>\n                    </JATOList>\n                  </div>\n                </Col>\n                <Col md={4}>\n                  <div className=\"home-page-right-section\"></div>\n                </Col>\n              </Row>\n            </Container>\n          </glamorous.Div>\n        </Tabs.Tab>\n\n        <Tabs.Tab id=\"tab3\" title=\"Data Flow\">\n          <glamorous.Div padding={20}>\n            <Container>\n              <Row>\n                <Col md={12}>\n                  <div className=\"tab3\">\n                    <JATOHeading as=\"h3\">\n                      Connected Car Data Acquisition and Ingestion\u000b - Share\n                      Connected Mobility\n                    </JATOHeading>\n                    <div className=\"homepage-tab3-diagram\"></div>\n                  </div>\n                </Col>\n              </Row>\n            </Container>\n          </glamorous.Div>\n        </Tabs.Tab>\n\n        <Tabs.Tab id=\"tab4\" title=\"JATO Opportunities\">\n          <glamorous.Div padding={20}>\n            <Container>\n              <Row>\n                <Col md={12}>\n                  <div className=\"tab3\">\n                    <JATOHeading as=\"h3\">Opportunity landscape</JATOHeading>\n                    <JATOVerticalSpacer />\n                    <JATOList className=\"tab-1-list\">\n                      <JATOListItem>\n                        &#8226; Be the data aggregator/transformer\n                      </JATOListItem>\n                      <JATOListItem>\n                        &#8226; Provide normalised data sets across multiple\n                        brands\n                      </JATOListItem>\n                      <JATOListItem>\n                        &#8226; Enrich and curate ingested data\n                      </JATOListItem>\n                      <JATOListItem>\n                        &#8226; Provide connectivity system comparisons between\n                        brands, who provides the best granular data for\n                        customer's purpose\n                      </JATOListItem>\n                      <JATOListItem>\n                        &#8226; Comparison of published data to actual data such\n                        as performance over time\n                      </JATOListItem>\n                      <JATOListItem>\n                        &#8226; Possibilities with data science of predicting\n                        fuel efficiency and anomalies compared to predictions\n                      </JATOListItem>\n                    </JATOList>\n                    <JATOVerticalSpacer height={12} />\n                  </div>\n                </Col>\n              </Row>\n            </Container>\n          </glamorous.Div>\n        </Tabs.Tab>\n      </Tabs>\n    </div>\n  );\n};\n\nexport default Home;\n","const ActionNames = {\n    page1: \"page1Action\",\n    page2: \"page2Action\",\n    page3: \"page3Action\"\n};\n\nexport default ActionNames;","import { Dispatcher } from 'flux';\nexport default new Dispatcher();","const page2Data = [    \n    {\n        \"age\": 1,\n        \"2015\": 3.8,\n        \"2016\": 4.3,\n        \"2017\": 4.4,\n        \"2018\": 4.5,\n        \"2019\": 5,\n        \"Your Car\": 8\n    },\n    {\n        \"age\": 2,\n        \"2015\": 3.6,\n        \"2016\": 4.2,\n        \"2017\": 4.3,\n        \"2018\": 4.5,\n        \"2019\": null,\n        \"Your Car\": 6\n    },\n    {\n        \"age\": 3,\n        \"2015\": 3.5,\n        \"2016\": 4,\n        \"2017\": 4.2,\n        \"2018\": null,\n        \"2019\": null,\n        \"Your Car\": 4\n    },\n    {\n        \"age\": 4,\n        \"2015\": 2.8,\n        \"2016\": 3.5,\n        \"2017\": null,\n        \"2018\": null,\n        \"2019\": null,\n        \"Your Car\": 2\n    },\n    {\n        \"age\": 5,\n        \"2015\": 2.5,\n        \"2016\": null,\n        \"2017\": null,\n        \"2018\": null,\n        \"2019\": null,\n        \"Your Car\": 0\n    }\n]\n\nconst page1Data = [\n    { name: \"2015\", value: 1.5 },\n    { name: \"2016\", value: 1.6 },\n    { name: \"2017\", value: 1.7 },\n    { name: \"2018\", value: 3.4 },    \n    { name: \"Your vehicle\", value: 0.4 }\n]\n\nconst page3Data = [\n    { \"name\": \"January\", \"you\": 1500, \"others\": 1600 },\n    { \"name\": \"February\", \"you\": 2500, \"others\": 1700 },\n    { \"name\": \"March\", \"you\": 3457, \"others\": 1800 },\n    { \"name\": \"April\", \"you\": 2100, \"others\": 1900 },\n    { \"name\": \"Summer Starts\", \"you\": 150, \"others\": 1700 },\n    { \"name\": \"Sun Shines!\", \"you\": 3350, \"others\": 1500 }\n]\n\nexport { page1Data, page2Data, page3Data };","import EventEmitter from 'events';\nimport ActionNames from '../actions/action-names';\nimport dispatcher from '../actions/dispatcher';\nimport { page1Data, page2Data, page3Data } from './dummyData';\n\nclass TheStore extends EventEmitter{\n    notifications = {\n        page1Received: \"page1Received\",\n        page2Received: \"page2Received\",\n        page3Received: \"page3Received\"\n    }\n\n    page1Data = page1Data;\n    page2Data = page2Data;\n    page3Data = page3Data;\n\n    handleActions(action){\n        switch(action.type){\n            case(ActionNames.page1):{\n                this.emit(this.notifications.testNotification);\n                break;                \n            }\n            case(ActionNames.page2):{\n                this.emit(this.notifications.page2Received);\n                break;\n            }\n            case(ActionNames.page3):{\n                this.emit(this.notifications.page3Received);\n                break;\n            }\n            default: return;\n        }\n    }\n}\n\nlet theStore = new TheStore();\ndispatcher.register(theStore.handleActions.bind(theStore));\nexport default theStore;\n\n","import React, { useState, useEffect } from 'react';\nimport { CartesianGrid, XAxis, YAxis, Tooltip, ResponsiveContainer, BarChart, Bar } from 'recharts';\nimport { JATOHeading, JATOBasicCard, JATOText } from '@jato/ui-component-library';\nimport theStore from '../stores/store';\nimport { GetPage1Data } from '../actions/actions';\n\nconst Page1 = () => {\n    const [data, setData] = useState([]);\n\n    useEffect(() => {\n        theStore.on(theStore.notifications.testNotification, testNotification);\n\n        if (data.length === 0){\n            GetPage1Data();\n        }\n\n        return function(){\n            theStore.removeAllListeners(theStore.notifications.testNotification);\n        }\n    });\n\n    const testNotification = () => {\n        setData(theStore.page1Data);\n    }\n\n    return(<JATOBasicCard>\n        <JATOHeading as=\"h3\">Kilometers per litre per model year</JATOHeading>\n        <JATOText as=\"div\">Compare your vehicle against other vehicles</JATOText>\n        <ResponsiveContainer width=\"100%\" height={250}>\n            <BarChart data={data}>\n                <CartesianGrid strokeDasharray=\"3 3\" />\n                <XAxis dataKey=\"name\" />\n                <YAxis />\n                <Tooltip />\n                <Bar dataKey=\"value\" fill=\"#C40005\" />\n            </BarChart>\n        </ResponsiveContainer>\n    </JATOBasicCard>);\n}\n\nexport default Page1;","import dispatcher from './dispatcher';\nimport ActionNames from './action-names';\n\nconst GetPage1Data = (props) => {\n    dispatcher.dispatch({ type: ActionNames.page1, data: null });\n}\n\nconst GetPage2Data = (props) => {\n    dispatcher.dispatch({ type: ActionNames.page2, data: null });\n}\n\nconst GetPage3Data = (props) => {\n    dispatcher.dispatch({ type: ActionNames.page3, data: null });\n}\n\nexport { GetPage1Data, GetPage2Data, GetPage3Data };","import React, { useState, useEffect } from 'react';\nimport { Legend, ResponsiveContainer, LineChart, CartesianGrid, XAxis, YAxis, Tooltip, Line } from 'recharts';\nimport { JATOHeading, JATOBasicCard, JATOText } from '@jato/ui-component-library';\nimport theStore from '../stores/store';\nimport { GetPage2Data } from '../actions/actions';\n\nconst Page2 = () => {\n    const [data, setData] = useState([]);\n\n    const dataComingIn = () => {\n        setData(theStore.page2Data);\n    }\n\n    useEffect(() => {\n        theStore.on(theStore.notifications.page2Received, dataComingIn);\n\n        if (data.length === 0){\n            GetPage2Data();\n        }\n\n        return(function(){\n            theStore.removeAllListeners(theStore.notifications.page2Received);\n        });\n    });\n\n    return(<JATOBasicCard>\n            <JATOHeading as=\"h3\">Fuel Efficiency over time</JATOHeading>\n            <JATOText as=\"div\">Compare how your car has used fuel against other vehicles</JATOText>\n            <ResponsiveContainer width=\"100%\" height={250}>\n                <LineChart data={data}>\n                    <CartesianGrid strokeDasharray=\"3 3\" />\n                    <XAxis dataKey=\"age\"/>\n                    <YAxis />\n                    <Tooltip />\n                    <Legend />\n                    <Line type=\"monotone\" dataKey=\"2015\" stroke=\"#000000\" />\n                    <Line type=\"monotone\" dataKey=\"2016\" stroke=\"#C6C6C6\" />\n                    <Line type=\"monotone\" dataKey=\"2017\" stroke=\"#4392B5\" />\n                    <Line type=\"monotone\" dataKey=\"2018\" stroke=\"#D4E6F1\" />\n                    <Line type=\"monotone\" dataKey=\"2019\" stroke=\"#e28082\" />\n                    <Line type=\"monotone\" dataKey=\"Your Car\" stroke=\"#C40005\" />\n                </LineChart>\n            </ResponsiveContainer>\n        </JATOBasicCard>);\n}\n\nexport default Page2;","import React, { useState, useEffect } from 'react';\nimport { JATOHeading, JATOBasicCard, JATOText } from '@jato/ui-component-library';\nimport { ResponsiveContainer, AreaChart, XAxis, YAxis, CartesianGrid, Area, Tooltip } from 'recharts';\nimport theStore from '../stores/store';\nimport { GetPage3Data } from '../actions/actions';\n\nconst Page3 = () => {\n    const [data, setData] = useState([]);\n\n    const dataComingIn = () => {\n        setData([...theStore.page3Data]);\n    }\n\n    useEffect(() => {        \n        theStore.on(theStore.notifications.page3Received, dataComingIn);\n\n        if (data.length === 0){\n            GetPage3Data();\n        }\n        return function(){\n            theStore.removeAllListeners(theStore.notifications.page3Received);\n        }\n    });\n\n    return<JATOBasicCard>\n        <JATOHeading as=\"h3\">Distance Travelled</JATOHeading>\n        <JATOText as=\"div\">Compare your distance against other drivers</JATOText>\n        <ResponsiveContainer width=\"100%\" height={250}>\n            <AreaChart data={data}>\n                <defs>\n                    <linearGradient id=\"youColour\" x1=\"0\" y1=\"0\" x2=\"0\" y2=\"1\">\n                        <stop offset=\"5%\" stopColor=\"#e28082\" stopOpacity={0.8}/>\n                        <stop offset=\"95%\" stopColor=\"#e28082\" stopOpacity={0}/>\n                    </linearGradient>\n                    <linearGradient id=\"othersColour\" x1=\"0\" y1=\"0\" x2=\"0\" y2=\"1\">\n                        <stop offset=\"5%\" stopColor=\"#D4E6F1\" stopOpacity={0.8}/>\n                        <stop offset=\"95%\" stopColor=\"#D4E6F1\" stopOpacity={0}/>\n                    </linearGradient>\n                </defs>\n                <XAxis dataKey=\"name\" />\n                <YAxis />\n                <CartesianGrid strokeDasharray=\"3 3\" />\n                <Tooltip />\n                <Area type=\"monotone\" dataKey=\"you\" stroke=\"#C40005\" fillOpacity={1} fill=\"url(#youColour)\" />\n                <Area type=\"monotone\" dataKey=\"others\" stroke=\"#4392B5\" fillOpacity={1} fill=\"url(#othersColour)\" />\n            </AreaChart>\n        </ResponsiveContainer>\n    </JATOBasicCard>\n}\n\nexport default Page3;","import React from \"react\";\nimport { Col, Container, Row } from \"react-grid-system\";\nimport glamorous from \"glamorous\";\nimport Tabs from \"../component/tabs/Tabs\";\n\nimport { JATOVerticalSpacer } from \"@jato/ui-component-library\";\n\nconst Page3 = () => {\n  return (\n    <div className=\"home-page\">\n      <Tabs\n        activeTab={{\n          id: \"tab1\",\n        }}\n      >\n        <Tabs.Tab id=\"tab1\" title=\"Product Discovery\">\n          <glamorous.Div padding={20}>\n            <Container>\n              <Row>\n                <Col md={12}>\n                  <div className=\"product-main-wrapper\">\n                    <div className=\"documentation-tab1-slide1\"></div>\n                    <div className=\"documentation-tab1-slide2\"></div>\n                    <div className=\"documentation-tab1-slide3\"></div>\n                  </div>\n                </Col>\n              </Row>\n            </Container>\n          </glamorous.Div>\n        </Tabs.Tab>\n\n        <Tabs.Tab id=\"tab2\" title=\"Architecture\">\n          <glamorous.Div padding={20}>\n            <Container>\n              <Row>\n                <Col md={12}>\n                  <div className=\"documentation-tab2\">\n                    <div className=\"documentation-tab2-diagram\"></div>\n                  </div>\n                </Col>\n              </Row>\n            </Container>\n          </glamorous.Div>\n        </Tabs.Tab>\n      </Tabs>\n    </div>\n  );\n};\n\nexport default Page3;\n","import React from \"react\";\nimport { Switch, Route } from \"react-router-dom\";\nimport Home from \"../../pages/Home\";\nimport Page1 from \"../../pages/page1\";\nimport Page2 from \"../../pages/page2\";\nimport Page3 from \"../../pages/page3\";\nimport Page4 from \"../../pages/page4\";\n\nconst Routing = (props) => {\n  return (\n    <Switch>\n      <Route path=\"/\" exact component={Home} />\n      <Route path=\"/home\" component={Home} />\n      <Route path=\"/page1\" component={Page1} />\n      <Route path=\"/page2\" component={Page2} />\n      <Route path=\"/page3\" component={Page3} />\n      <Route path=\"/page4\" component={Page4} />\n    </Switch>\n  );\n};\n\nexport default Routing;\n","import styled from \"styled-components\";\n\nimport { JATOTheme } from \"@jato/ui-component-library\";\n\nexport const StyledJumbotron = styled.div(\n  {\n    display: \"flex\",\n    marginTop: \"18px\",\n    width: \"100%\",\n    paddingBottom: JATOTheme.space[6],\n    alignItems: \"flex-end\",\n    backgroundColor: JATOTheme.colors.grey,\n    backgroundSize: \"cover\",\n    backgroundPosition: \"center\",\n\n    \"* > \": {\n      width: \"100%\",\n    },\n\n    [`@media (min-width: ${JATOTheme.breakpoints[0]}px)`]: {\n      paddingBottom: JATOTheme.space[6],\n    },\n  },\n  ({ minHeight }) => ({\n    minHeight,\n    \"&::after\": {\n      content: '\"\"',\n      display: \"block\",\n      minHeight: \"inherit\",\n      fontSize: 0,\n    },\n  }),\n  ({ background }) => {\n    let images;\n    if (background && Array.isArray(background)) {\n      const backgroundImages = background.reverse();\n\n      images = backgroundImages.map((img) => {\n        const isMobile = img.breakpoint < JATOTheme.breakpoints[3];\n        return isMobile\n          ? {\n              [`@media (max-width: ${img.breakpoint}px)`]: {\n                backgroundImage: `url(${img.url})`,\n              },\n            }\n          : {\n              [`@media (max-width: ${img.breakpoint}px)`]: {\n                backgroundImage: `url(${img.url})`,\n              },\n              [`@media (min-width: ${img.breakpoint}px)`]: {\n                backgroundImage: `url(${img.url})`,\n              },\n            };\n      });\n    } else {\n      images = { backgroundImage: `url(${background})` };\n    }\n    return images;\n  }\n);\n\nexport const StyledJumbotronInner = styled.div({\n  width: \"100%\",\n});\n","import React, { FunctionComponent } from \"react\";\nimport { Col, Container, Row } from \"react-grid-system\";\n\nimport { StyledJumbotron, StyledJumbotronInner } from \"./jumbotronStyles\";\nimport { JATOVerticalSpacer } from \"@jato/ui-component-library\";\n\nconst Jumbotron = ({ children, background, minHeight = 280 }) => (\n  <StyledJumbotron background={background} minHeight={minHeight}>\n    <StyledJumbotronInner minHeight={minHeight}>\n      <Container>\n        <Row>\n          <Col sm={12} md={10} lg={8}>\n            <JATOVerticalSpacer height={40} />\n            {children}\n          </Col>\n        </Row>\n      </Container>\n    </StyledJumbotronInner>\n  </StyledJumbotron>\n);\n\nexport default Jumbotron;\n","import React from \"react\";\n\nconst MainContainer = (props) => {\n  return <div className=\"main-container\">{props.children}</div>;\n};\n\nexport default MainContainer;\n","import React from \"react\";\nimport \"./App.css\";\nimport Header from \"./component/header/header\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport Routing from \"./component/routing/routing\";\n\nimport { JATOHeading, JATOText, JATOTheme } from \"@jato/ui-component-library\";\nimport Jumbotron from \"./component/headlines/Jumbotron\";\nimport backgroundBranding from \"../src/img/dashboard-brand.jpg\";\nimport MainContainer from \"./component/mainContainer/MainContainer\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <BrowserRouter>\n        <Header />\n        <Jumbotron background={backgroundBranding} minHeight={100}>\n          <JATOText\n            as=\"p\"\n            fontWeight=\"bold\"\n            fontSize={JATOTheme.fontSizes[6]}\n            color={JATOTheme.colors.darkBlue}\n          ></JATOText>\n          <JATOHeading\n            as=\"h1\"\n            fontWeight=\"bold\"\n            color={JATOTheme.colors.lightBlue}\n          >\n            Shared Connected Mobility\n          </JATOHeading>\n        </Jumbotron>\n        <MainContainer>\n          <Routing />\n        </MainContainer>\n      </BrowserRouter>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import \"bootstrap/dist/css/bootstrap.css\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}